name: BuildOpenWrt

on: push

jobs:

  build:

    runs-on: ubuntu-latest


    steps:

      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: main

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils \
          rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean


      #- name: Setup Debug Session
      #  uses: P3TERX/debugger-action@master
  
      # - name: Install Repo
      #   run: |
      #     git clone https://github.com/friendlyarm/repo
      #     sudo cp repo/repo /usr/bin/

      - name: Download Source
        run: |
          git clone https://github.com/coolsnowwolf/lede.git
          cd lede
          git reset 5acc56143fb74aa122bc8fdaca5a0a6e333237b6 --hard
          # git restore feeds.conf.default
          # git pull
          sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
          sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default
          rm -rf feeds
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          cp ../package_config .config


      - name: Merge LEDE
        run: |
          cd lede
          make download -j8 V=s
          make -j8 V=s

      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mkdir -p ./artifact/package

          cp lede/bin/targets/x86/64/*.gz ./artifact/
          cp -rf $(find lede/bin/packages/ -type f -name "*.ipk") ./artifact/package/
          # cp lede/bin/targets/rockchip/armv8/*.gz ./artifact/

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWRT
          path: ./artifact/

